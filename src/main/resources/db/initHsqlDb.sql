DROP TABLE lunch_dishes IF EXISTS;
DROP TABLE dishes IF EXISTS;
DROP TABLE lunch_menus IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP TABLE user_roles IF EXISTS;
DROP TABLE users IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000;

CREATE TABLE dishes
(
    id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    dish_name        VARCHAR(255)            NOT NULL,
    price            INTEGER                 NOT NULL
);
CREATE UNIQUE INDEX unique_dish_name_price_idx
    ON DISHES (dish_name, price);

CREATE TABLE restaurants
(
    id              INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name            VARCHAR(255)    NOT NULL
);

CREATE TABLE lunch_menus
(
    id              INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    restaurant_id   INTEGER NOT NULL,
    CONSTRAINT uniq_restaurant_lunch UNIQUE (restaurant_id),
    FOREIGN KEY (restaurant_id) REFERENCES restaurants(id)
);

CREATE TABLE lunch_dishes
(
    lunch_id        INTEGER     NOT NULL,
    dish_id         INTEGER     NOT NULL,
    FOREIGN KEY (lunch_id) references lunch_menus(id) ON DELETE CASCADE,
    FOREIGN KEY (dish_id) references dishes(id) ON DELETE CASCADE
);

CREATE TABLE users
(
    id          INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    voted_today BOOLEAN DEFAULT FALSE NOT NULL
);

CREATE TABLE user_roles
(
    user_id     INTEGER         NOT NULL,
    role        VARCHAR(255)    NOT NULL,
    CONSTRAINT unique_user_role UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);